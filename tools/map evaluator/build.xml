<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="all" name="Compile and build java classes plus jar archives">

	<!-- Path to MOBAC main application including src and libs -->
	<property name="MOBAC.dir" value="../MOBAC" />

	<property file="src/mobac/mobac.properties" />
	<property name="jar.name" value="Map Evaluator.jar" />
	<property name="zip.name" value="Map Evaluator ${mobac.version}.zip" />
	<property name="main.class" value="mobac.StartMapEvaluator" />

	<target name="all" depends="clean_build,build,create_jar,shrink,create_release" />

	<target name="clean_build">
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="build" includes="**/*" />
		</delete>
	</target>

	<target name="build">
		<path id="mobac.path">
			<pathelement location="${MOBAC.dir}" />
		</path>
		<property name="mobacpath" refid="mobac.path" />
		<echo message="Path to main app: ${mobacpath}" />
		<mkdir dir="build" />
		<path id="maincp">
			<fileset dir="lib" includes="log*.jar" />
			<fileset dir="lib" includes="bsh*.jar" />
			<fileset dir="lib" includes="commons-codec*.jar" />
			<fileset dir="${MOBAC.dir}/lib" includes="*.jar" />
		</path>
		<javac srcdir="src:${MOBAC.dir}/src/main/java" destdir="build" target="1.6" debug="true">
			<classpath refid="maincp" />
			<include name="mobac/**" />
			<exclude name="mobac/tools/**" />
		</javac>
		<copy todir="build" overwrite="true">
			<fileset dir="src">
				<include name="**/*.properties" />
				<include name="mobac/resources/**" />
			</fileset>
			<fileset dir="${MOBAC.dir}/src/main/resources">
				<include name="mobac/resources/images/error.png" />
				<include name="mobac/resources/images/hourglass.png" />
			</fileset>
		</copy>
	</target>

	<target name="create_jar">
		<delete file="${jar.name}" />
		<jar destfile="${jar.name}" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
				<attribute name="Class-Path" value=". jai_core.jar jai_codec.jar lib/jai_core.jar lib/jai_codec.jar jai_*.jar lib/jai_*.jar" />
			</manifest>
			<zipfileset src="lib/bsh-2.0b4.jar">
				<exclude name="bsh/servlet/**" />
				<exclude name="bsh/util/BeanShellBSFEngine.*" />
			</zipfileset>
			<zipfileset src="lib/log4j-1.2.15.jar">
				<exclude name="org/apache/log4j/net/**" />
				<exclude name="org/apache/log4j/or/jms/**" />
				<exclude name="org/apache/log4j/jmx/**" />
			</zipfileset>
			<zipfileset src="lib/commons-codec-1.4.jar" />
			<zipfileset src="${MOBAC.dir}/lib/je-3.3.93.jar">
				<exclude name="com/sleepycat/persist/model/ClassEnhancerTask.*" />
			</zipfileset>
			<zipfileset src="${MOBAC.dir}/lib/Tidy.jar" includes="org/w3c/tidy/**" />
			<fileset dir="build">
				<exclude name="**/unittest/**" />
				<exclude name="**/*.java" />
			</fileset>
		</jar>
	</target>

	<target name="shrink" description="Removes unused classes from compiled jar">
		<taskdef resource="proguard/ant/task.properties" classpath="${MOBAC.dir}/lib/proguard.jar" />
		<proguard obfuscate="false" optimize="false" ignorewarnings="true">
			<injar file="${jar.name}" />
			<libraryjar file="${java.home}/lib/rt.jar" />
			<outjar file="build/${jar.name}" />
			-keep class ${main.class} { public static void main(java.lang.String[]); }
			-keep class mobac.utilities.beanshell.* { *; }
			-keep class org.apache.axis2.description.java2wsdl.bytecode.ParamReader { public * ; }
			-keepclassmembers enum * {
			    public static **[] values();
			    public static ** valueOf(java.lang.String);
			}
			-keepclassmembers class * implements java.io.Serializable {
			    static final long serialVersionUID;
			    private void writeObject(java.io.ObjectOutputStream);
			    private void readObject(java.io.ObjectInputStream);
			    java.lang.Object writeReplace();
			    java.lang.Object readResolve();
			}
			-keepclassmembers class * implements com.sleepycat.persist.evolve.Conversion {
				boolean equals(java.lang.Object);
			}
		</proguard>
		<move file="build/${jar.name}" tofile="${jar.name}" overwrite="true" />
	</target>

	<target name="create_release" description="Packs all necessary files for the binary release into one zip archive">
		<zip destfile="${zip.name}" update="false">
			<fileset dir="./">
				<include name="${jar.name}" />
				<include name="gpl.txt" />
				<include name="README-MapEvaluator.htm" />
				<include name="CHANGELOG-MapEvaluator.txt" />
				<include name="start.*" />
			</fileset>
		</zip>
	</target>

</project>
